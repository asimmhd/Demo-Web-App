/*
 * Generation Date: Fri, 11 Nov 2011 12:30:20
 * Generated by:    CSC
 * Generated from:  NPSCA
 * 
 * Copyright 2010 CSC, all rights reserved.
 *
 * This software is the proprietary information of CSC.
 * Use is subject to license terms.
*/
 
package com.sears.processing.code.model;

import com.quipoz.framework.datatype.*;
import com.quipoz.COBOLFramework.datatype.ExternalData;
import static com.quipoz.COBOLFramework.COBOLFunctions.*;
import com.quipoz.COBOLFramework.COBOLFunctions;
import com.quipoz.COBOLFramework.datatype.Validator;
import com.quipoz.COBOLFramework.datatype.ValueRange;

/**
 * NPSCommunicationArea.
 *	
 * @author  CSC
 * @version $Revision: #1 $
 */
public class NPSCommunicationArea extends ExternalData {

    /**
     * serialVersionUID required as class is serializable.
     */
    private static final long serialVersionUID = 1L;

  //*******************************
  //Attribute Declarations
  //*******************************
  	public FixedLengthStringData caSection1 = new FixedLengthStringData(130);
  
  	public FixedLengthStringData caSection1Overlay = new FixedLengthStringData(130).isAPartOf(caSection1, 0, REDEFINE);
  		/*            .. SYSTEM OWNING THE TRANSACTION*/
  	public FixedLengthStringData caCicsApplid = new FixedLengthStringData(8).isAPartOf(caSection1Overlay, 0);
  		/*            .. NAME OF LOCAL CICS SYSTEM*/
  	public FixedLengthStringData caCicsSysid = new FixedLengthStringData(4).isAPartOf(caSection1Overlay, 8);
  		/*            .. OPERATOR RACF ID - FROM SIGN-ON (NCX230)*/
  	public FixedLengthStringData caRacfId = new FixedLengthStringData(8).isAPartOf(caSection1Overlay, 12);
  	public PackedDecimalData caEmployeeNum = new PackedDecimalData(7, 0).isAPartOf(caSection1Overlay, 20);
  	public FixedLengthStringData caFunctionAccess = new FixedLengthStringData(1).isAPartOf(caSection1Overlay, 24);
  		/*            .. OPERATOR FUNCTION ACCESS - FROM PJSXVXE
  		            .. VALUES ARE 1 THRU 6  (6 - FOR NPS ONLY)*/
  	public FixedLengthStringData caOpLanguage = new FixedLengthStringData(1).isAPartOf(caSection1Overlay, 25);
  		/*            .. OPERATOR LANGUAGE - FROM PJSXVXE
  		                  'E' - ENGLISH
  		                  'F' - FRENCH
  		                  'S' - SPANISH*/
  	public FixedLengthStringData caOperatorName = new FixedLengthStringData(25).isAPartOf(caSection1Overlay, 26);
  		/*            .. OPERATOR NAME - FROM PJSXVXE*/
  	public PackedDecimalData caSupvsrNumber = new PackedDecimalData(7, 0).isAPartOf(caSection1Overlay, 51);
  		/*            .. SUPERVISOR NUMBER - FROM PJSXVXE (NPJ2501)*/
  	public FixedLengthStringData caMuNo = new FixedLengthStringData(7).isAPartOf(caSection1Overlay, 55);
  		/*            .. EMP SVCE UNIT'S MARKETING UNIT CAN BE = CA-SU-NO*/
  	public FixedLengthStringData caMuAreaCode = new FixedLengthStringData(3).isAPartOf(caSection1Overlay, 62);
  		/*            .. EMP SVCE UNIT - PHONE NO*/
  	public FixedLengthStringData caSuNo = new FixedLengthStringData(7).isAPartOf(caSection1Overlay, 65);
  		/*            .. EMP SERVICE UNIT NUMBER - FROM PJSXVXE*/
  	public ZonedDecimalData caMenu250Option = new ZonedDecimalData(2, 0).isAPartOf(caSection1Overlay, 72).setUnsigned();
  		/*            ..                          NOTE: SET TO 2 FOR NPS*/
  	public ZonedDecimalData caMenu260Option = new ZonedDecimalData(2, 0).isAPartOf(caSection1Overlay, 74).setUnsigned();
  		/*            .. OPTION SELECTED ON NPJ260 MENU*/
  	public FixedLengthStringData caTodaysDate = new FixedLengthStringData(10).isAPartOf(caSection1Overlay, 76);
  	public FixedLengthStringData caTdDateYear = new FixedLengthStringData(4).isAPartOf(caTodaysDate, 0);
  	public FixedLengthStringData caTdDateCc = new FixedLengthStringData(2).isAPartOf(caTdDateYear, 0);
  	public FixedLengthStringData caTdDateYy = new FixedLengthStringData(2).isAPartOf(caTdDateYear, 2);
  	public FixedLengthStringData filler = new FixedLengthStringData(1).isAPartOf(caTodaysDate, 4, FILLER);
  	public FixedLengthStringData caTdDateMonth = new FixedLengthStringData(2).isAPartOf(caTodaysDate, 5);
  	public FixedLengthStringData filler1 = new FixedLengthStringData(1).isAPartOf(caTodaysDate, 7, FILLER);
  	public FixedLengthStringData caTdDateDay = new FixedLengthStringData(2).isAPartOf(caTodaysDate, 8);
  	public FixedLengthStringData caTodaysDateX = new FixedLengthStringData(10).isAPartOf(caTodaysDate, 0, REDEFINE);
  	public FixedLengthStringData caTdScreenDate = new FixedLengthStringData(8).isAPartOf(caSection1Overlay, 86);
  	public FixedLengthStringData caTdScreenMm = new FixedLengthStringData(2).isAPartOf(caTdScreenDate, 0);
  	public FixedLengthStringData filler2 = new FixedLengthStringData(1).isAPartOf(caTdScreenDate, 2, FILLER);
  	public FixedLengthStringData caTdScreenDd = new FixedLengthStringData(2).isAPartOf(caTdScreenDate, 3);
  	public FixedLengthStringData filler3 = new FixedLengthStringData(1).isAPartOf(caTdScreenDate, 5, FILLER);
  	public FixedLengthStringData caTdScreenYy = new FixedLengthStringData(2).isAPartOf(caTdScreenDate, 6);
  	public FixedLengthStringData caCountryCode = new FixedLengthStringData(1).isAPartOf(caSection1Overlay, 94);
  		/*               'C' - CANADA
  		               'U' - USA
  		               'M' - MEXICO*/
  	public FixedLengthStringData caLogonTime = new FixedLengthStringData(8).isAPartOf(caSection1Overlay, 95);
  	public FixedLengthStringData caLogonTimeHh = new FixedLengthStringData(2).isAPartOf(caLogonTime, 0);
  	public FixedLengthStringData filler4 = new FixedLengthStringData(1).isAPartOf(caLogonTime, 2, FILLER);
  	public FixedLengthStringData caLogonTimeMm = new FixedLengthStringData(2).isAPartOf(caLogonTime, 3);
  	public FixedLengthStringData filler5 = new FixedLengthStringData(1).isAPartOf(caLogonTime, 5, FILLER);
  	public FixedLengthStringData caLogonTimeSs = new FixedLengthStringData(2).isAPartOf(caLogonTime, 6);
  	public FixedLengthStringData caLogonTimeX = new FixedLengthStringData(8).isAPartOf(caLogonTime, 0, REDEFINE);
  	public FixedLengthStringData caXeSupGroup = new FixedLengthStringData(7).isAPartOf(caSection1Overlay, 103);
  	public ZonedDecimalData caMenu350Option = new ZonedDecimalData(2, 0).isAPartOf(caSection1Overlay, 110).setUnsigned();
  		/*            .. OPTION SELECTED ON NPJ350 MENU*/
  	public PointerData caNpj551Ptr = new PointerData().isAPartOf(caSection1Overlay, 112);
  	public PointerData caCorePtr = new PointerData().isAPartOf(caSection1Overlay, 116);
  	public ZonedDecimalData caMenu285Option = new ZonedDecimalData(1, 0).isAPartOf(caSection1Overlay, 120).setUnsigned();
  	public FixedLengthStringData caMenu602Option = new FixedLengthStringData(1).isAPartOf(caSection1Overlay, 121);
  	public FixedLengthStringData caSysid604 = new FixedLengthStringData(4).isAPartOf(caSection1Overlay, 122);
  	public FixedLengthStringData filler6 = new FixedLengthStringData(4).isAPartOf(caSection1Overlay, 126, FILLER);
  		/*  R E S E R V E D    FOR H E L P                            **/
  	public FixedLengthStringData caSection2 = new FixedLengthStringData(20);
  
  	public FixedLengthStringData caSection2Overlay = new FixedLengthStringData(20).isAPartOf(caSection2, 0, REDEFINE);
  	public FixedLengthStringData filler7 = new FixedLengthStringData(20).isAPartOf(caSection2Overlay, 0, FILLER);
  		/*    ERROR MESSAGES                                              *
  		         -  ERROR MESSAGE NUMBER TO BE DISPLAYED ON SCREEN      *
  		            SET IN EACH PROGRAM.                                *
  		         -  ERROR MESSAGE TO CARRY FROM ONE SCREEN TO ANOTHER   **/
  	public FixedLengthStringData caSection3 = new FixedLengthStringData(100);
  
  	public FixedLengthStringData caSection3Overlay = new FixedLengthStringData(100).isAPartOf(caSection3, 0, REDEFINE);
  	public BinaryData caReturnCode = new BinaryData(4, 0).isAPartOf(caSection3Overlay, 0);
  		/*                0 - SUCCESSFUL
  		                2 - SQL ERROR
  		                4 - CICS ABEND
  		                6 - CICS ERROR
  		                8 - PRINT PROBLEM
  		               10 - FUNCTION ROUTER ERROR (DATASTREAM ERROR)*/
  	public FixedLengthStringData caEibrcode = new FixedLengthStringData(6).isAPartOf(caSection3Overlay, 2);
  	public BinaryData caSqlcode = new BinaryData(4, 0).isAPartOf(caSection3Overlay, 8);
  	public FixedLengthStringData caErrorMsgNum = new FixedLengthStringData(5).isAPartOf(caSection3Overlay, 10);
  	public FixedLengthStringData caErrMsgText = new FixedLengthStringData(79).isAPartOf(caSection3Overlay, 15);
  	public FixedLengthStringData caWarningMsgSent = new FixedLengthStringData(1).isAPartOf(caSection3Overlay, 94);
  		/*            .. MESSAGE SENT TO SCREEN
  		            .. SET IN EACH PROGRAM IF NEEDED*/
  	public FixedLengthStringData caFrhReturnCode = new FixedLengthStringData(2).isAPartOf(caSection3Overlay, 95);
  	public FixedLengthStringData caFrhDiagCode1 = new FixedLengthStringData(2).isAPartOf(caSection3Overlay, 97);
  	public FixedLengthStringData filler8 = new FixedLengthStringData(1).isAPartOf(caSection3Overlay, 99, FILLER);
  		/*    P R O G R A M    W O R K   A R E A                          **/
  	public FixedLengthStringData caSection4 = new FixedLengthStringData(40);
  
  	public FixedLengthStringData caSection4Overlay = new FixedLengthStringData(40).isAPartOf(caSection4, 0, REDEFINE);
  	public FixedLengthStringData caCurrPgmName = new FixedLengthStringData(8).isAPartOf(caSection4Overlay, 0);
  		/*            ..CURRENT PROGRAM NAME - INITALIZED AT START OF EACH
  		            .. PROGRAM ENTRY. (ONLY SET BY TASK 1).*/
  	public FixedLengthStringData caConfirmCycle = new FixedLengthStringData(1).isAPartOf(caSection4Overlay, 8);
  		/*            CONFIRM CYCLE FLAG -VALUES ARE: BLANK (NONE)
  		               'U'(UPDATE)
  		               'E'(EXIT-PF3)
  		               'C'(CANCEL-PF12)
  		               'B'(BACKWARD PAGING)
  		               'F' (FORWARD PAGING)
  		               SET IN EACH PROGRAM IF NEEDED*/
  	public FixedLengthStringData caProcFlag = new FixedLengthStringData(1).isAPartOf(caSection4Overlay, 9);
  		/*            .. PROCESSING FLAG -INDICATE FLOW WITHIN BUS. FUNC.
  		            .. SET IN EACH PROGRAM IF NEEDED*/
  	public FixedLengthStringData ca2ndPass = new FixedLengthStringData(1).isAPartOf(caSection4Overlay, 10);
  		/*            .. 2ND PASS OF A TRANSACTION INDICATOR
  		            .. SIMILAR TO CA-CONFIRM-CYCLE
  		            .. SET IN EACH PROGRAM IF NEEDED*/
  	public FixedLengthStringData caRequestType = new FixedLengthStringData(1).isAPartOf(caSection4Overlay, 11);
  		/*            .. REQUEST TYPE INDICATOR
  		            .. SET IN EACH PROGRAM IF NEEDED*/
  	public ZonedDecimalData caScreenSeq = new ZonedDecimalData(1, 0).isAPartOf(caSection4Overlay, 12).setUnsigned();
  	public FixedLengthStringData caSubSysId = new FixedLengthStringData(3).isAPartOf(caSection4Overlay, 13);
  	public FixedLengthStringData filler9 = new FixedLengthStringData(24).isAPartOf(caSection4Overlay, 16, FILLER);
  		/*    P R O G R A M    C O N T R O L                              *
  		 . CONTAINS THE LOCATION IN THE STACK OF THE CURRENT TASK 1 PGM.
  		 . CHANGED BY EACH PROGRAM PRIOR TO TRANSFERING TO
  		                ANOTHER PROGRAM AND BY PF3 AND PF12 STUBS.
  		 . KEEP TRACK OF PROGRAMS UP TO 13 LEVELS.
  		 PGM-INDEX    - CURRENT INDEX (MUST BE INCREMENTED BY 1 ON XCTL)
  		 STACK LEVEL  - SET BY TASK 1 OF EACH PROGRAM.  USED TO DETERMINE
  		                WHERE PROGRAM WILL RETURN TO FOR PF3 OR PF12
  		                'X' EXIT POINT -
  		                'R' RETURN POINT - BY-PASSED BY PF3
  		 OPT-SEL      - SELECTION ENTERED BY USER ON SCREEN.
  		                USED BETWEEN TRANSACTIONS FOR PROCESSING WHICH
  		                DEPENDS ON OPTION ENTERED ON PREVIOUS SCREEN
  		 PGM-NAME    -  PROGRAM NAME FOR PF3/PF12 TRANSFER CONTROL
  		                UPDATED IN TASK 2 OF EACH TRANSACTION.*/
  	public FixedLengthStringData caSection5 = new FixedLengthStringData(260);
  
  	public FixedLengthStringData caSection5Overlay = new FixedLengthStringData(260).isAPartOf(caSection5, 0, REDEFINE);
  	public BinaryData caCurrPgmIndex = new BinaryData(4, 0).isAPartOf(caSection5Overlay, 0);
  	public FixedLengthStringData[] caPgmStack = FLSArrayPartOfStructure(13, 19, caSection5Overlay, 2);
  	public FixedLengthStringData[] caPgmStackLevel = FLSDArrayPartOfArrayStructure(1, caPgmStack, 0);
  	public ZonedDecimalData[] caPgmStackOptSel = ZDArrayPartOfArrayStructure(2, 0, caPgmStack, 1, UNSIGNED_TRUE);
  	public FixedLengthStringData[] caPgmStackPgmName = FLSDArrayPartOfArrayStructure(8, caPgmStack, 3);
  	public FixedLengthStringData[] filler10 = FLSDArrayPartOfArrayStructure(8, caPgmStack, 11);
  	public BinaryData caPrevPgmIndex = new BinaryData(4, 0).isAPartOf(caSection5Overlay, 249);
  	public FixedLengthStringData filler11 = new FixedLengthStringData(9).isAPartOf(caSection5Overlay, 251, FILLER);
  		/*    P R O G R A M    P A G I N G                                **/
  	public FixedLengthStringData caSection6 = new FixedLengthStringData(30);
  
  	public FixedLengthStringData caSection6Overlay = new FixedLengthStringData(30).isAPartOf(caSection6, 0, REDEFINE);
  	public FixedLengthStringData caCurrScreenStatus = new FixedLengthStringData(1).isAPartOf(caSection6Overlay, 0);
  		/*        - - - - - - FOR TEMPORARY STORAGE QUEUE ID*/
  	public FixedLengthStringData caCurrQname = new FixedLengthStringData(8).isAPartOf(caSection6Overlay, 1);
  	public FixedLengthStringData caCurrQnameTran = new FixedLengthStringData(4).isAPartOf(caCurrQname, 0);
  	public FixedLengthStringData caCurrQnameTrmid = new FixedLengthStringData(4).isAPartOf(caCurrQname, 4);
  	public BinaryData caCurrTsItemNo = new BinaryData(4, 0).isAPartOf(caSection6Overlay, 9);
  	public BinaryData caRowsPerPage = new BinaryData(4, 0).isAPartOf(caSection6Overlay, 11);
  	public BinaryData caCurrPageNo = new BinaryData(4, 0).isAPartOf(caSection6Overlay, 13);
  	public BinaryData caCurrRow = new BinaryData(4, 0).isAPartOf(caSection6Overlay, 15);
  	public BinaryData caNoOfRows = new BinaryData(4, 0).isAPartOf(caSection6Overlay, 17);
  	public BinaryData caNoOfPages = new BinaryData(4, 0).isAPartOf(caSection6Overlay, 19);
  	public BinaryData caQueueLength = new BinaryData(4, 0).isAPartOf(caSection6Overlay, 21);
  	public FixedLengthStringData filler12 = new FixedLengthStringData(7).isAPartOf(caSection6Overlay, 23, FILLER);
  		/*    APPLICATION PROGRAM WORK AREA                               *
  		    NOTE - THIS IS A PUBLIC AREA.                               *
  		   ## ADDED 1000 EXTRA BYTES                                    **/
  	public FixedLengthStringData caSection7 = new FixedLengthStringData(2000);
  
  	public FixedLengthStringData caSection7Overlay1 = new FixedLengthStringData(2000).isAPartOf(caSection7, 0, REDEFINE);
  	public FixedLengthStringData caProgramWorkArea = new FixedLengthStringData(2000).isAPartOf(caSection7Overlay1, 0);
  	public FixedLengthStringData caProgramWorkSec = new FixedLengthStringData(2000).isAPartOf(caProgramWorkArea, 0, REDEFINE);
  	public FixedLengthStringData[] caProgramWorkPtn = FLSArrayPartOfStructure(20, 100, caProgramWorkSec, 0);
  
  	public FixedLengthStringData caSection7Overlay2 = new FixedLengthStringData(2000).isAPartOf(caSection7, 0, REDEFINE);
  	public FixedLengthStringData caEmpArea = new FixedLengthStringData(200).isAPartOf(caSection7Overlay2, 0);
  	public FixedLengthStringData caRteArea = new FixedLengthStringData(300).isAPartOf(caSection7Overlay2, 200);
  	public FixedLengthStringData caRemainingArea = new FixedLengthStringData(1500).isAPartOf(caSection7Overlay2, 500);
  
  		/*             PROGRAM SPECIFIC WORK/SCRATCH PAD AREA*/
  	public FixedLengthStringData caSection7Overlay3 = new FixedLengthStringData(2000).isAPartOf(caSection7, 0, REDEFINE);
  	public FixedLengthStringData caSection7Part = new FixedLengthStringData(1000).isAPartOf(caSection7Overlay3, 0);
  	public FixedLengthStringData caRemainig1 = new FixedLengthStringData(1000).isAPartOf(caSection7Overlay3, 1000);
  		/*    D B 2   K E Y   I N F O R M A T I O N*/
  	public FixedLengthStringData caSection8 = new FixedLengthStringData(145);
  
  	public FixedLengthStringData caSection8Overlay = new FixedLengthStringData(145).isAPartOf(caSection8, 0, REDEFINE);
  	public BinaryData caCustKey = new BinaryData(9, 0).isAPartOf(caSection8Overlay, 0);
  	public BinaryData caCustKey2 = new BinaryData(9, 0).isAPartOf(caSection8Overlay, 4);
  	public BinaryData caLocnSfx = new BinaryData(4, 0).isAPartOf(caSection8Overlay, 8);
  	public BinaryData caLocnSfx2 = new BinaryData(4, 0).isAPartOf(caSection8Overlay, 10);
  	public BinaryData caLeadKey = new BinaryData(4, 0).isAPartOf(caSection8Overlay, 12);
  	public BinaryData caAgrmtSuffix = new BinaryData(4, 0).isAPartOf(caSection8Overlay, 14);
  	public BinaryData caItemSfx = new BinaryData(9, 0).isAPartOf(caSection8Overlay, 16);
  	public FixedLengthStringData caCustAccount = new FixedLengthStringData(18).isAPartOf(caSection8Overlay, 20);
  	public FixedLengthStringData caAccountType = new FixedLengthStringData(2).isAPartOf(caCustAccount, 0);
  	public FixedLengthStringData caAccountKey = new FixedLengthStringData(16).isAPartOf(caCustAccount, 2);
  	public FixedLengthStringData caSmCode = new FixedLengthStringData(12).isAPartOf(caSection8Overlay, 38);
  	public FixedLengthStringData caSmCodeDesc = new FixedLengthStringData(25).isAPartOf(caSection8Overlay, 50);
  	public FixedLengthStringData caAddrHashKey = new FixedLengthStringData(8).isAPartOf(caSection8Overlay, 75);
  	public FixedLengthStringData caBatchInfo = new FixedLengthStringData(39).isAPartOf(caSection8Overlay, 83);
  		/*            MOVED BELOW -> BATCH NUMBER FROM NPJ251 SCREEN*/
  	public PackedDecimalData caBatchAmtCur = new PackedDecimalData(9, 2).isAPartOf(caBatchInfo, 0);
  		/*            CURRENT DOLLAR AMOUNT IN BATCH - UPDATED IN
  		            NPJ350 AND NPJ365
  		            NOTE: SHOULD BE MOVED BELOW WHEN ALL PGMS ARE
  		                  RE-COMPILED.*/
  	public PackedDecimalData caBatchCntMax = new PackedDecimalData(5, 0).isAPartOf(caBatchInfo, 5);
  		/*            MAXIMUM NUMBER OF ENTRIES FOR BATCH. EITHER
  		            ENTERED IN NPJ251 OR READ FROM PJSXVXB IF BATCH EXIST*/
  	public PackedDecimalData caBatchCntCur = new PackedDecimalData(5, 0).isAPartOf(caBatchInfo, 8);
  		/*            CURRENT COUNT IN BATCH - FROM PJSXVXB (NPJ2512)
  		            INCREMENTED IN BY NPJ365, NPJ3502*/
  	public FixedLengthStringData caBatchNum = new FixedLengthStringData(6).isAPartOf(caBatchInfo, 11);
  		/*            BATCH NUMBER FROM NPJ251 SCREEN*/
  	public FixedLengthStringData caBatchStoreNum = new FixedLengthStringData(7).isAPartOf(caBatchInfo, 17);
  		/*            BATCH STORE NUMBER FROM NPJ251 SCREEN*/
  	public FixedLengthStringData caBatchDate = new FixedLengthStringData(10).isAPartOf(caBatchInfo, 24);
  	public PackedDecimalData caBatchDolAmt = new PackedDecimalData(9, 2).isAPartOf(caBatchInfo, 34);
  		/*            BATCH DOLLAR AMOUNT FROM NPJ251 SCREEN*/
  	public FixedLengthStringData caItemSvceLocn = new FixedLengthStringData(1).isAPartOf(caSection8Overlay, 122);
  	public FixedLengthStringData caBchNo = new FixedLengthStringData(5).isAPartOf(caSection8Overlay, 123);
  	public BinaryData caAgrAdjCncNo = new BinaryData(4, 0).isAPartOf(caSection8Overlay, 128);
  	public FixedLengthStringData filler13 = new FixedLengthStringData(15).isAPartOf(caSection8Overlay, 130, FILLER);
  		/*    C U S T O M E R     I N F O R M A T I O N                   *
  		   ## ADDED 500 BYTES TO THE FILLER                             **/
  	public FixedLengthStringData caSection9 = new FixedLengthStringData(650);
  
  	public FixedLengthStringData caSection9Overlay = new FixedLengthStringData(650).isAPartOf(caSection9, 0, REDEFINE);
  	public BinaryData caCurrCustIndex = new BinaryData(4, 0).isAPartOf(caSection9Overlay, 0);
  		/*            '1' - MAIN CUSTOMER - WHICH WILL ALWAY BE THE
  		                  CURRENT CUSTOMER WE ARE WORKING WITH.
  		                  WILL ALWAYS BE WHERE CUSTOMER LEAD DATA IS
  		                  READ FROM.
  		            '2' - NEW/MOVED/OCCUPANT CUSTOMER*/
  	public FixedLengthStringData[] caCustInfo = FLSArrayPartOfStructure(2, 312, caSection9Overlay, 2);
  	public FixedLengthStringData[] caCustInd = FLSDArrayPartOfArrayStructure(1, caCustInfo, 0);
  		/*                'M' MAIN/CURRENT CUSTOMER
  		                'N' NEW CUSTOMER
  		                'F' FROM CUSTOMER
  		                'T' TO CUSTOMER
  		                'O' OLD CUSTOMER
  		                'R' RETURN TO PARTNER STORE*/
  	public FixedLengthStringData[] caCustTimestamp = FLSDArrayPartOfArrayStructure(26, caCustInfo, 1);
  		/*                .. TIMESTAMP FROM TABLE PJCCTCN - CN-UPDT-TSTAMP
  		                .. UPDATED WHENEVER CUSTOMER RECORD IS READ.*/
  	public FixedLengthStringData[] caCustLeadsOut = FLSDArrayPartOfArrayStructure(1, caCustInfo, 27);
  		/*                'Y'-CUST HAS LEADS OUTSTANDING - CN-CURR-LEADS>0
  		                'N'-CUST HAS NO LEADS OUTSTANDING*/
  	public FixedLengthStringData[] caCustPhone = FLSDArrayPartOfArrayStructure(10, caCustInfo, 28);
  	public FixedLengthStringData[] caCustAreaCode = FLSDArrayPartOfArrayStructure(3, caCustPhone, 0);
  	public FixedLengthStringData[] caCustPhExchg = FLSDArrayPartOfArrayStructure(3, caCustPhone, 3);
  	public FixedLengthStringData[] caCustPhLocal = FLSDArrayPartOfArrayStructure(4, caCustPhone, 6);
  		/*                THIS EXTENSION IS NOT BEING USED FOR THIS PHASE*/
  	public FixedLengthStringData[] caCustPhExt = FLSDArrayPartOfArrayStructure(4, caCustInfo, 38);
  	public FixedLengthStringData[] caCustType = FLSDArrayPartOfArrayStructure(1, caCustInfo, 42);
  		/*                'H' HOUSE
  		                'S' SHOP
  		                'P' PARTNER STORE*/
  	public FixedLengthStringData[] caCustEmpType = FLSDArrayPartOfArrayStructure(2, caCustInfo, 43);
  	public FixedLengthStringData[] caCustEmpRtreInd = FLSDArrayPartOfArrayStructure(1, caCustEmpType, 0);
  	public FixedLengthStringData[] caCustEmpCompany = FLSDArrayPartOfArrayStructure(1, caCustEmpType, 1);
  	public FixedLengthStringData[] caCustName = FLSDArrayPartOfArrayStructure(50, caCustInfo, 45);
  	public FixedLengthStringData[] caCustExpandName = FLSDArrayPartOfArrayStructure(74, caCustInfo, 95);
  	public FixedLengthStringData[] caCustNamePrefix = FLSDArrayPartOfArrayStructure(10, caCustExpandName, 0);
  	public FixedLengthStringData[] caCustFirstName = FLSDArrayPartOfArrayStructure(11, caCustExpandName, 10);
  	public FixedLengthStringData[] caCustMiddleName = FLSDArrayPartOfArrayStructure(11, caCustExpandName, 21);
  	public FixedLengthStringData[] caCustLastName = FLSDArrayPartOfArrayStructure(32, caCustExpandName, 32);
  	public FixedLengthStringData[] caCustNameSuffix = FLSDArrayPartOfArrayStructure(10, caCustExpandName, 64);
  	public FixedLengthStringData[] caCustAddrLine = FLSDArrayPartOfArrayStructure(78, caCustInfo, 169);
  	public FixedLengthStringData[] caCustStreetName = FLSDArrayPartOfArrayStructure(50, caCustAddrLine, 0);
  	public FixedLengthStringData[] caCustCity = FLSDArrayPartOfArrayStructure(12, caCustAddrLine, 50);
  	public FixedLengthStringData[] caCustStateProv = FLSDArrayPartOfArrayStructure(2, caCustAddrLine, 62);
  	public FixedLengthStringData[] caCustPostalZip = FLSDArrayPartOfArrayStructure(14, caCustAddrLine, 64);
  	public FixedLengthStringData[] caCustPostalCode = FLSDArrayPartOfArrayStructure(6, caCustPostalZip, 0);
  	public FixedLengthStringData[] caCustSectorSeg = FLSDArrayPartOfArrayStructure(4, caCustPostalZip, 6);
  	public FixedLengthStringData[] caCustWalkSeq = FLSDArrayPartOfArrayStructure(4, caCustPostalZip, 10);
  	public FixedLengthStringData[] caCustAddress = FLSDArrayPartOfArrayStructure(60, caCustInfo, 247);
  	public PackedDecimalData[] caSuNoCust = PDArrayPartOfArrayStructure(7, 0, caCustInfo, 307);
  		/*                CUSTOMER SVCE UNIT NO BASED ON ZIP
  		                NOTE CURRENTLY BEING UPDATED BY ANYONE **X*/
  	public FixedLengthStringData[] caCustSaoLocnInd = FLSDArrayPartOfArrayStructure(1, caCustInfo, 311);
  		/*                CUSTOMER SOLICIT ADDRESS AND OCCUPANT INDICATOR*/
  	public FixedLengthStringData caSoNo = new FixedLengthStringData(8).isAPartOf(caSection9Overlay, 626);
  	public FixedLengthStringData caCustSource = new FixedLengthStringData(2).isAPartOf(caSection9Overlay, 634);
  	public FixedLengthStringData filler14 = new FixedLengthStringData(14).isAPartOf(caSection9Overlay, 636, FILLER);
  
  	public FixedLengthStringData caCustAltPhone = new FixedLengthStringData(13);
  	public FixedLengthStringData caCustAltAreaCode = new FixedLengthStringData(3).isAPartOf(caCustAltPhone, 0);
  	public FixedLengthStringData caCustAltPhExchg = new FixedLengthStringData(3).isAPartOf(caCustAltPhone, 3);
  	public FixedLengthStringData caCustAltPhLocal = new FixedLengthStringData(4).isAPartOf(caCustAltPhone, 6);
  	public FixedLengthStringData filler15 = new FixedLengthStringData(3).isAPartOf(caCustAltPhone, 10, FILLER);
  	public FixedLengthStringData caCustCrossStreets = new FixedLengthStringData(50);
  	public FixedLengthStringData caCustAptNo = new FixedLengthStringData(6);
  	public FixedLengthStringData caCustAddrRecType = new FixedLengthStringData(1);
  	public FixedLengthStringData caCustStreetWoutApt = new FixedLengthStringData(50);
  	public BinaryData caPrevCustKey = new BinaryData(9, 0);
  		/* ADDED REPAIR LOCATION UNIT NO PART OF CC 97 CHANGES*/
  	public FixedLengthStringData caRprLocUnNo = new FixedLengthStringData(7);
  	public FixedLengthStringData filler16 = new FixedLengthStringData(569);
  		/*        EXTRA FILLER PER NPJ REQUEST
  		##***      COMMUNICATION AREA - NPS SERVICE FOUNDATION        ***
  		##**   LENGTH OF COMMUNICATION AREA = 925 BYTES.               **
  		##*                      MISC INFORMATION                       **/
  	public FixedLengthStringData caMiscSec = new FixedLengthStringData(284);
  
  	public FixedLengthStringData caMiscSecOverlay = new FixedLengthStringData(284).isAPartOf(caMiscSec, 0, REDEFINE);
  	public FixedLengthStringData caOption = new FixedLengthStringData(1).isAPartOf(caMiscSecOverlay, 0);
  		/*                 MENU OPTION*/
  	public FixedLengthStringData caOptionAttr = new FixedLengthStringData(1).isAPartOf(caMiscSecOverlay, 1);
  		/*                 MENU OPTION ATTRIBUTE BYTE 1*/
  	public FixedLengthStringData caMsg = new FixedLengthStringData(79).isAPartOf(caMiscSecOverlay, 2);
  		/*                 MESSAGE LINE 1*/
  	public FixedLengthStringData caMsg2 = new FixedLengthStringData(79).isAPartOf(caMiscSecOverlay, 81);
  		/*                 MESSAGE LINE 2*/
  	public FixedLengthStringData caUserid = new FixedLengthStringData(7).isAPartOf(caMiscSecOverlay, 160);
  		/*                 USED WITH 'CSMT' ERROR MESSAGE*/
  	public FixedLengthStringData caEmpIdNo = new FixedLengthStringData(7).isAPartOf(caMiscSecOverlay, 167);
  		/*                 SERVICE EMPLOYEE'S ID (USED FOR SQL CALLS)*/
  	public FixedLengthStringData caLogonUnNo = new FixedLengthStringData(7).isAPartOf(caMiscSecOverlay, 174);
  		/*                 NPS UNIT LOGON NUMBER - USED BY NPS010*/
  	public FixedLengthStringData caNewSvcSchDt = new FixedLengthStringData(10).isAPartOf(caMiscSecOverlay, 181);
  		/*                 NEW SCHEDULE DATE PASSED TO NPS101*/
  	public FixedLengthStringData caPrevSvcSchDt = new FixedLengthStringData(10).isAPartOf(caMiscSecOverlay, 191);
  		/*                  PREVIOUS SCHEDULE DATE PASSED TO NPS101*/
  	public FixedLengthStringData caCurrSchDt = new FixedLengthStringData(10).isAPartOf(caMiscSecOverlay, 201);
  		/*                 DATE POINTER - USED BY NPS276*/
  	public FixedLengthStringData caRegionNo = new FixedLengthStringData(7).isAPartOf(caMiscSecOverlay, 211);
  		/*                 REGION NUMBER - NPS232*/
  	public FixedLengthStringData caSvcRtlUnNo = new FixedLengthStringData(7).isAPartOf(caMiscSecOverlay, 218);
  		/*                 RETAIL UNIT NUMBER*/
  	public FixedLengthStringData caIdyCd = new FixedLengthStringData(2).isAPartOf(caMiscSecOverlay, 225);
  		/*                INDUSTRY CODE*/
  	public FixedLengthStringData caSvcUnNo = new FixedLengthStringData(7).isAPartOf(caMiscSecOverlay, 227);
  		/*                SERVICE UNIT*/
  	public FixedLengthStringData caEmpLogonId = new FixedLengthStringData(7).isAPartOf(caMiscSecOverlay, 234);
  		/*                 EMPLOYEE ID FOR NPS LOGON*/
  	public FixedLengthStringData caEmpName = new FixedLengthStringData(28).isAPartOf(caMiscSecOverlay, 241);
  	public FixedLengthStringData caEmpLstNm = new FixedLengthStringData(16).isAPartOf(caEmpName, 0);
  	public FixedLengthStringData caEmpFstNm = new FixedLengthStringData(11).isAPartOf(caEmpName, 16);
  	public FixedLengthStringData caEmpMidInlNm = new FixedLengthStringData(1).isAPartOf(caEmpName, 27);
  		/*                    SERVICE TECHNICIAN NAME*/
  	public FixedLengthStringData caSoTypCd = new FixedLengthStringData(4).isAPartOf(caMiscSecOverlay, 269);
  		/*                 SERVICE ORDER TYPE -
  		                 OTC, QUICK, ONSITE, HI-TECH, & SRS*/
  	public FixedLengthStringData caActionCd = new FixedLengthStringData(1).isAPartOf(caMiscSecOverlay, 273);
  	public Validator caAdd = new Validator(caActionCd, "A");
  	public Validator caInquiry = new Validator(caActionCd, "I");
  	public Validator caUpdate = new Validator(caActionCd, "U");
  	public Validator caDelete = new Validator(caActionCd, "D");
  	public Validator caReinstate = new Validator(caActionCd, "R");
  		/*                 ACTION CODE*/
  	public FixedLengthStringData caQueryNo = new FixedLengthStringData(1).isAPartOf(caMiscSecOverlay, 274);
  	public Validator caNameEmpidSsnEntered = new Validator(caQueryNo, "1");
  	public Validator caNameEmpidEntered = new Validator(caQueryNo, "2");
  	public Validator caNameSsnEntered = new Validator(caQueryNo, "3");
  	public Validator caEmpidSsnEntered = new Validator(caQueryNo, "4");
  	public Validator caNameEntered = new Validator(caQueryNo, "5");
  	public Validator caEmpidEntered = new Validator(caQueryNo, "6");
  	public Validator caSsnEntered = new Validator(caQueryNo, "7");
  	public Validator caViewEmployees = new Validator(caQueryNo, "8");
  	public Validator caRacfIdEntered = new Validator(caQueryNo, "9");
  		/*                     TYPE OF QUERY*/
  	public PackedDecimalData caCallLoadTime = new PackedDecimalData(4, 0).isAPartOf(caMiscSecOverlay, 275);
  	public PackedDecimalData caPrevCallLoadTime = new PackedDecimalData(4, 0).isAPartOf(caMiscSecOverlay, 278);
  	public FixedLengthStringData caBusinessCd = new FixedLengthStringData(3).isAPartOf(caMiscSecOverlay, 281);
  		/*##*                      ERROR MESSAGE                          **/
  	public FixedLengthStringData caErrorSec = new FixedLengthStringData(79);
  
  	public FixedLengthStringData caErrorSecOverlay = new FixedLengthStringData(79).isAPartOf(caErrorSec, 0, REDEFINE);
  	public FixedLengthStringData caErrorMsg = new FixedLengthStringData(79).isAPartOf(caErrorSecOverlay, 0);
  	public FixedLengthStringData caErrorKey = new FixedLengthStringData(4).isAPartOf(caErrorMsg, 0);
  		/*                     ERROR MESSAGE KEY*/
  	public FixedLengthStringData caErrorText = new FixedLengthStringData(75).isAPartOf(caErrorMsg, 4);
  		/*                     ERROR MESSAGE TEXT
  		##*                   JOB SECTION                               **/
  	public FixedLengthStringData caJobSec = new FixedLengthStringData(62);
  
  	public FixedLengthStringData caJobSecOverlay = new FixedLengthStringData(62).isAPartOf(caJobSec, 0, REDEFINE);
  	public FixedLengthStringData caSpecName = new FixedLengthStringData(10).isAPartOf(caJobSecOverlay, 0);
  	public PackedDecimalData caJobCd = new PackedDecimalData(5, 0).isAPartOf(caJobSecOverlay, 10);
  	public FixedLengthStringData caJobCdCrgCd = new FixedLengthStringData(1).isAPartOf(caJobSecOverlay, 13);
  	public FixedLengthStringData caJobCdDs = new FixedLengthStringData(25).isAPartOf(caJobSecOverlay, 14);
  	public PackedDecimalData caTotalServProd = new PackedDecimalData(7, 2).isAPartOf(caJobSecOverlay, 39);
  	public FixedLengthStringData filler17 = new FixedLengthStringData(19).isAPartOf(caJobSecOverlay, 43, FILLER);
  		/*##*                      HELP  INFORMATION                      **/
  	public FixedLengthStringData caHelpSec = new FixedLengthStringData(15);
  
  	public FixedLengthStringData caHelpSecOverlay = new FixedLengthStringData(15).isAPartOf(caHelpSec, 0, REDEFINE);
  	public ZonedDecimalData caTitlePntr = new ZonedDecimalData(3, 0).isAPartOf(caHelpSecOverlay, 0).setUnsigned();
  		/*                 USED W/NPS050 - HELP TABLE - TITLE POINTER*/
  	public FixedLengthStringData caReqEnteredSw = new FixedLengthStringData(1).isAPartOf(caHelpSecOverlay, 3);
  	public FixedLengthStringData caNoHelpSw = new FixedLengthStringData(1).isAPartOf(caHelpSecOverlay, 4);
  	public ZonedDecimalData caCurrHelpPageNo = new ZonedDecimalData(2, 0).isAPartOf(caHelpSecOverlay, 5).setUnsigned();
  	public FixedLengthStringData caHelpKey = new FixedLengthStringData(8).isAPartOf(caHelpSecOverlay, 7);
  	public FixedLengthStringData caHelpScrnName = new FixedLengthStringData(6).isAPartOf(caHelpKey, 0);
  	public FixedLengthStringData caHelpScrnPage = new FixedLengthStringData(2).isAPartOf(caHelpKey, 6);
  	public ZonedDecimalData caHelpScrnPgPos1 = new ZonedDecimalData(1, 0).isAPartOf(caHelpScrnPage, 0).setUnsigned();
  	public ZonedDecimalData caHelpScrnPgPos2 = new ZonedDecimalData(1, 0).isAPartOf(caHelpScrnPage, 1).setUnsigned();
  		/*                 HELP KEY FOR VSAM READING & UPDATES
  		##*               NPS SYSTEM SECURITY LEVELS                    **/
  	public FixedLengthStringData caSecuritySec = new FixedLengthStringData(1);
  
  	public FixedLengthStringData caSecuritySecOverlay = new FixedLengthStringData(1).isAPartOf(caSecuritySec, 0, REDEFINE);
  	public FixedLengthStringData caSecurityLvl = new FixedLengthStringData(1).isAPartOf(caSecuritySecOverlay, 0);
  	public Validator userFromUnit = new Validator(caSecurityLvl, "1","2","3");
  	public Validator userFromUnit1 = new Validator(caSecurityLvl, "1");
  	public Validator userFromUnit2 = new Validator(caSecurityLvl, "2");
  	public Validator userFromUnit3 = new Validator(caSecurityLvl, "3");
  	public Validator userFromRegion = new Validator(caSecurityLvl, "4","5");
  	public Validator userFromRegion1 = new Validator(caSecurityLvl, "4");
  	public Validator userFromRegion2 = new Validator(caSecurityLvl, "5");
  	public Validator userFromHq = new Validator(caSecurityLvl, "6");
  	public Validator userFromSco = new Validator(caSecurityLvl, "7");
  	public Validator security1To7 = new Validator(caSecurityLvl, new ValueRange("1","7"));
  		/*##*                   ON-SITE WORK AREAS                        **/
  	public FixedLengthStringData caOnsiteSec = new FixedLengthStringData(3);
  
  	public FixedLengthStringData caOnsiteSecOverlay = new FixedLengthStringData(3).isAPartOf(caOnsiteSec, 0, REDEFINE);
  	public FixedLengthStringData caWrkCd = new FixedLengthStringData(3).isAPartOf(caOnsiteSecOverlay, 0);
  		/*                 WORK AREA CODE
  		##*         PAGING FIELDS & LAST SHOWN FIELDS                   **/
  	public FixedLengthStringData caPagingSec = new FixedLengthStringData(28);
  
  	public FixedLengthStringData caPagingOverlay = new FixedLengthStringData(28).isAPartOf(caPagingSec, 0, REDEFINE);
  		/*  PAGING FIELDS*/
  	public BinaryData caHighPossPageNo = new BinaryData(4, 0).isAPartOf(caPagingOverlay, 0);
  	public ZonedDecimalData caScreenNumber = new ZonedDecimalData(1, 0).isAPartOf(caPagingOverlay, 2).setUnsigned();
  	public BinaryData caHighestPageNumber = new BinaryData(4, 0).isAPartOf(caPagingOverlay, 3);
  		/*                 USED FOR SCROLLING OF INFORMATION*/
  	public BinaryData caLowestPageNumber = new BinaryData(4, 0).isAPartOf(caPagingOverlay, 5);
  		/*                 USED FOR SCROLLING BEHIND STARTING POINT*/
  	public ZonedDecimalData caCurrCol = new ZonedDecimalData(4, 0).isAPartOf(caPagingOverlay, 7);
  		/*                 CURRENT COLUMN POINTER*/
  	public BinaryData caNumberOfRows = new BinaryData(4, 0).isAPartOf(caPagingOverlay, 11);
  		/*  LAST SHOWN FIELDS*/
  	public FixedLengthStringData caLastWorkArea = new FixedLengthStringData(3).isAPartOf(caPagingOverlay, 13);
  		/*                 LAST WORK AREA CODE ON PREVIOUS SCREEN*/
  	public FixedLengthStringData caLastZipArea = new FixedLengthStringData(10).isAPartOf(caPagingOverlay, 16);
  	public FixedLengthStringData caLastPtlCd = new FixedLengthStringData(6).isAPartOf(caLastZipArea, 0);
  	public FixedLengthStringData caLastZipSufCd = new FixedLengthStringData(4).isAPartOf(caLastZipArea, 6);
  		/*                 LAST ZIP AREA ON PREVIOUS SCREEN*/
  	public FixedLengthStringData filler18 = new FixedLengthStringData(2).isAPartOf(caPagingOverlay, 26, FILLER);
  		/*##*                    SWITCHES AND FLAGS                       **/
  	public FixedLengthStringData caSwFlagSec = new FixedLengthStringData(10);
  
  	public FixedLengthStringData caSwFlagOverlay = new FixedLengthStringData(10).isAPartOf(caSwFlagSec, 0, REDEFINE);
  		/*  SWITCHES*/
  	public FixedLengthStringData filler19 = new FixedLengthStringData(1).isAPartOf(caSwFlagOverlay, 0, FILLER);
  		/*  FLAGS*/
  	public FixedLengthStringData caWorkAreaPresentFlag = new FixedLengthStringData(1).isAPartOf(caSwFlagOverlay, 1);
  	public Validator caWorkAreaInOtherTbl = new Validator(caWorkAreaPresentFlag, "Y");
  	public FixedLengthStringData caErrorFlag = new FixedLengthStringData(1).isAPartOf(caSwFlagOverlay, 2);
  	public Validator outstandingError = new Validator(caErrorFlag, "Y");
  		/*                 OUTSTANDING ERROR OCCURRED*/
  	public FixedLengthStringData caErrorFlagOverlay = new FixedLengthStringData(1).isAPartOf(caErrorFlag, 0, REDEFINE);
  	public FixedLengthStringData caCustOutArea = new FixedLengthStringData(1).isAPartOf(caErrorFlagOverlay, 0);
  	public FixedLengthStringData caEndOfDataFlag = new FixedLengthStringData(1).isAPartOf(caSwFlagOverlay, 3);
  	public Validator caEndOfData = new Validator(caEndOfDataFlag, "Y");
  	public Validator endOfData = new Validator(caEndOfDataFlag, "Y");
  		/*                 END-OF-DATA INDICATOR*/
  	public FixedLengthStringData caSaveFlag = new FixedLengthStringData(1).isAPartOf(caSwFlagOverlay, 4);
  	public Validator caSavedFromLastScreen = new Validator(caSaveFlag, "Y");
  		/*                SAVE-SELECTION INDICATOR*/
  	public FixedLengthStringData caHelpReturnFlag = new FixedLengthStringData(1).isAPartOf(caSwFlagOverlay, 5);
  		/*                 RETURN FROM HELP FLAG - USED BY NPS244*/
  	public FixedLengthStringData caTermsFlag = new FixedLengthStringData(1).isAPartOf(caSwFlagOverlay, 6);
  	public FixedLengthStringData caRestrictedAccess = new FixedLengthStringData(1).isAPartOf(caSwFlagOverlay, 7);
  	public FixedLengthStringData caWentToNps471 = new FixedLengthStringData(1).isAPartOf(caSwFlagOverlay, 8);
  	public FixedLengthStringData filler20 = new FixedLengthStringData(1).isAPartOf(caWentToNps471, 0, FILLER_REDEFINE);
  	public FixedLengthStringData caShopblockFl = new FixedLengthStringData(1).isAPartOf(filler20, 0);
  	public FixedLengthStringData caHomeServiceFl = new FixedLengthStringData(1).isAPartOf(caSwFlagOverlay, 9);
  		/*##*                 COMMUNICATION AREA FILLER                   *
  		##*    ## ADDED 500 BYTES TO THE FILLER                         **/
  	public FixedLengthStringData caFillerSec = new FixedLengthStringData(943);
  
  	public FixedLengthStringData caFillerOverlay = new FixedLengthStringData(941).isAPartOf(caFillerSec, 0, REDEFINE);
  	public FixedLengthStringData caEmpRacfId = new FixedLengthStringData(8).isAPartOf(caFillerOverlay, 0);
  	public PackedDecimalData caBofSub = new PackedDecimalData(2, 0).isAPartOf(caFillerOverlay, 8);
  	public PackedDecimalData caEofSub = new PackedDecimalData(2, 0).isAPartOf(caFillerOverlay, 10);
  	public FixedLengthStringData caBrUnNo = new FixedLengthStringData(7).isAPartOf(caFillerOverlay, 12);
  	public Validator validItronixUser = new Validator(caBrUnNo, "PD86   ");
  		/* ADDED SPDE UNIT INDICATOR FLAG*/
  	public FixedLengthStringData caSpdeSvcUnFl = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 19);
  	public Validator spdeUnit = new Validator(caSpdeSvcUnFl, "Y","M");
  	public Validator spdeMsgsWtg = new Validator(caSpdeSvcUnFl, "M");
  	public ZonedDecimalData caSaveDataCnt = new ZonedDecimalData(2, 0).isAPartOf(caFillerOverlay, 20).setUnsigned();
  		/*                 USED IN NPS145*/
  	public FixedLengthStringData ca092Flag = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 22);
  		/*                 USED IN NPS145*/
  	public FixedLengthStringData ca091Flag = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 23);
  		/*                 USED IN NPS138 MC 9/93*/
  	public FixedLengthStringData caCurrSoNo = new FixedLengthStringData(8).isAPartOf(caFillerOverlay, 24);
  		/*                 USED IN NPS145*/
  	public FixedLengthStringData caLastUnNo = new FixedLengthStringData(7).isAPartOf(caFillerOverlay, 32);
  		/*                 USED IN NPS143 FOR CURSOR PAGING*/
  	public FixedLengthStringData caPrnId = new FixedLengthStringData(8).isAPartOf(caFillerOverlay, 39);
  		/*                 USED IN NPS015 TO PASS PRINTER FROM NPSXTSU*/
  	public FixedLengthStringData caNps020Option = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 47);
  		/*                 PASSED FROM NPS020 TO NPS120*/
  	public FixedLengthStringData caSaveMuNo = new FixedLengthStringData(7).isAPartOf(caFillerOverlay, 48);
  		/*                 USED IN NPJ2501*/
  	public FixedLengthStringData caHomelifeUnit = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 55);
  		/*                 USED IN CALL CLOSE AND DISPLAY/UPDATE*/
  	public FixedLengthStringData caInquiryPa = new FixedLengthStringData(80).isAPartOf(caFillerOverlay, 56);
  		/*                 USED FOR CUSTOMER INQUIRY - NPSINQPA*/
  	public FixedLengthStringData caThdPtyPa = new FixedLengthStringData(200).isAPartOf(caFillerOverlay, 136);
  		/*                 USED FOR CALL CLOSE.*/
  	public FixedLengthStringData caCustPremier = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 336);
  		/*                 USED FOR PREMIER CUSTOMERS.*/
  	public FixedLengthStringData caLastPfkey = new FixedLengthStringData(3).isAPartOf(caFillerOverlay, 337);
  		/*                 USED FOR TELESERV.*/
  	public FixedLengthStringData caSetFl = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 340);
  		/*                 USED FOR CALL ANALYSIS.*/
  	public FixedLengthStringData caNps115SvcUnNo = new FixedLengthStringData(7).isAPartOf(caFillerOverlay, 341);
  		/*                 USED FOR CALL ANALYSIS.*/
  	public FixedLengthStringData caNps115LaborCvg = new FixedLengthStringData(2).isAPartOf(caFillerOverlay, 348);
  		/*                 USED FOR CALL ANALYSIS.*/
  	public FixedLengthStringData caForcePremSvcFl = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 350);
  		/*                 USED FOR CALL ANALYSIS.*/
  	public FixedLengthStringData caCpnNo = new FixedLengthStringData(11).isAPartOf(caFillerOverlay, 351);
  		/*                 Used for marketing effectiveness*/
  	public FixedLengthStringData caLdMktOpt = new FixedLengthStringData(3).isAPartOf(caFillerOverlay, 362);
  		/*                 Used for marketing effectiveness*/
  	public FixedLengthStringData[] caDate = FLSArrayPartOfStructure(3, 10, caFillerOverlay, 365);
  	public FixedLengthStringData[] caAthPyDt = FLSDArrayPartOfArrayStructure(10, caDate, 0);
  		/*                 Used for Food loss changes*/
  	public FixedLengthStringData[] caTime = FLSArrayPartOfStructure(3, 8, caFillerOverlay, 395);
  	public FixedLengthStringData[] caAthPyTm = FLSDArrayPartOfArrayStructure(8, caTime, 0);
  		/*                 Used for Food loss changes*/
  	public FixedLengthStringData caRefUnit = new FixedLengthStringData(7).isAPartOf(caFillerOverlay, 419);
  	public FixedLengthStringData caRefEmp = new FixedLengthStringData(7).isAPartOf(caFillerOverlay, 426);
  		/*                 Used for EMP REF capture NPS100*/
  	public FixedLengthStringData caThdPtyFlag = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 433);
  	public Validator thdPty = new Validator(caThdPtyFlag, "Y","F");
  	public Validator notThdPty = new Validator(caThdPtyFlag, "N");
  		/*                 Third party response from NPN123.*/
  	public FixedLengthStringData caTaxGeoCd = new FixedLengthStringData(9).isAPartOf(caFillerOverlay, 434);
  	public FixedLengthStringData caTaxCnyCd = new FixedLengthStringData(3).isAPartOf(caFillerOverlay, 443);
  	public FixedLengthStringData caJurTaxCd = new FixedLengthStringData(7).isAPartOf(caFillerOverlay, 446);
  	public FixedLengthStringData caJurCnyCd = new FixedLengthStringData(1).isAPartOf(caJurTaxCd, 0);
  	public FixedLengthStringData caJurCnySpCd = new FixedLengthStringData(1).isAPartOf(caJurTaxCd, 1);
  	public FixedLengthStringData caJurCtyLclCd = new FixedLengthStringData(1).isAPartOf(caJurTaxCd, 2);
  	public FixedLengthStringData caJurCtyLclSpCd = new FixedLengthStringData(1).isAPartOf(caJurTaxCd, 3);
  	public FixedLengthStringData caJurTstCd = new FixedLengthStringData(1).isAPartOf(caJurTaxCd, 4);
  	public FixedLengthStringData caJurSpCd = new FixedLengthStringData(1).isAPartOf(caJurTaxCd, 5);
  	public FixedLengthStringData caJurOthCd = new FixedLengthStringData(1).isAPartOf(caJurTaxCd, 6);
  	public ZonedDecimalData caSoTaxRt = new ZonedDecimalData(6, 5).isAPartOf(caFillerOverlay, 453).setUnsigned();
  	public FixedLengthStringData caPrtTaxFl = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 459);
  	public FixedLengthStringData caLabTaxFl = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 460);
  	public FixedLengthStringData caPaTaxFl = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 461);
  	public FixedLengthStringData caReturnFromNps118Fl = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 462);
  	public FixedLengthStringData caSvcOgpCd = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 463);
  		/*                'A' NON-SEARS SITE
  		                'B' NON-SEARS SHOP*/
  	public FixedLengthStringData caOption2 = new FixedLengthStringData(2).isAPartOf(caFillerOverlay, 464);
  		/*                 TWO BYTE MENU OPTION*/
  	public FixedLengthStringData caOption2Attr = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 466);
  		/*                 TWO BYTE MENU OPTION ATTRIBUTE*/
  	public FixedLengthStringData caOriCd = new FixedLengthStringData(4).isAPartOf(caFillerOverlay, 467);
  		/*                 ORIGINATION CODE*/
  	public ZonedDecimalData caCapNeeded = new ZonedDecimalData(3, 0).isAPartOf(caFillerOverlay, 471).setUnsigned();
  		/*                 ORIGINATION CODE*/
  	public FixedLengthStringData caCamsFl = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 474);
  	public Validator camsParallel = new Validator(caCamsFl, "1");
  	public Validator camsPilot = new Validator(caCamsFl, "2");
  	public Validator nonCams = new Validator(caCamsFl, " ");
  	public FixedLengthStringData caEmpSsn = new FixedLengthStringData(9).isAPartOf(caFillerOverlay, 475);
  		/*                 EMPLOYEE SSN NUMBER*/
  	public FixedLengthStringData caForceRsn = new FixedLengthStringData(4).isAPartOf(caFillerOverlay, 484);
  		/*                 Forced Call Reason*/
  	public FixedLengthStringData caNps114UnNo = new FixedLengthStringData(7).isAPartOf(caFillerOverlay, 488);
  		/*                 Unit Number  for NPS114*/
  	public FixedLengthStringData caNps145SvcOrigSchDt = new FixedLengthStringData(10).isAPartOf(caFillerOverlay, 495);
  		/*                 Original sch date for NPS145*/
  	public FixedLengthStringData caSvcFamCd = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 505);
  		/*                 SERVICING FAMILY CODE*/
  	public FixedLengthStringData caOverrideCd = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 506);
  		/*                 SERVICING ORGANIZATION OVERRIDE CODE*/
  	public FixedLengthStringData caAeAddonFl = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 507);
  		/*                 A AND E ADD-ON FLAG*/
  	public FixedLengthStringData caThirdStorCd = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 508);
  		/*                 3RD PARTY STORE STOCK FLAG*/
  	public FixedLengthStringData caInqCmyCd = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 509);
  		/*                 INQUIRY COMMUNITY CODE*/
  	public FixedLengthStringData caFstAvlDt = new FixedLengthStringData(8).isAPartOf(caFillerOverlay, 510);
  		/*                 FIRST AVAILABLE SVC DT*/
  	public FixedLengthStringData caPmChkCd = new FixedLengthStringData(1).isAPartOf(caFillerOverlay, 518);
  		/*                 pm check code*/
  	public FixedLengthStringData caMemberId = new FixedLengthStringData(16).isAPartOf(caFillerOverlay, 519);
  		/*                 SYWR Member ID*/
  	public FixedLengthStringData caFiller = new FixedLengthStringData(406).isAPartOf(caFillerOverlay, 535);


    /**
     * initialize all variables in the class.
     */
	public void initialize() {
		COBOLFunctions.initialize(caSection1);
		COBOLFunctions.initialize(caSection2);
		COBOLFunctions.initialize(caSection3);
		COBOLFunctions.initialize(caSection4);
		COBOLFunctions.initialize(caSection5);
		COBOLFunctions.initialize(caSection6);
		COBOLFunctions.initialize(caSection7);
		COBOLFunctions.initialize(caSection8);
		COBOLFunctions.initialize(caSection9);
		COBOLFunctions.initialize(caCustAltPhone);
		COBOLFunctions.initialize(caCustCrossStreets);
		COBOLFunctions.initialize(caCustAptNo);
		COBOLFunctions.initialize(caCustAddrRecType);
		COBOLFunctions.initialize(caCustStreetWoutApt);
		COBOLFunctions.initialize(caPrevCustKey);
		COBOLFunctions.initialize(caRprLocUnNo);
		COBOLFunctions.initialize(filler16);
		COBOLFunctions.initialize(caMiscSec);
		COBOLFunctions.initialize(caErrorSec);
		COBOLFunctions.initialize(caJobSec);
		COBOLFunctions.initialize(caHelpSec);
		COBOLFunctions.initialize(caSecuritySec);
		COBOLFunctions.initialize(caOnsiteSec);
		COBOLFunctions.initialize(caPagingSec);
		COBOLFunctions.initialize(caSwFlagSec);
		COBOLFunctions.initialize(caFillerSec);
	}	

	
    /**
     * Retrieves the entire copybook as if it was a single string.
     * @return single FixedLengthString
     */
	public FixedLengthStringData getBaseString() {
  		if (baseString == null) {
   			baseString = new FixedLengthStringData(caSection1.getLength() + caSection2.getLength() + caSection3.getLength() + caSection4.getLength() + caSection5.getLength() + caSection6.getLength() + caSection7.getLength() + caSection8.getLength() + caSection9.getLength() + caCustAltPhone.getLength() + caCustCrossStreets.getLength() + caCustAptNo.getLength() + caCustAddrRecType.getLength() + caCustStreetWoutApt.getLength() + caPrevCustKey.getLength() + caRprLocUnNo.getLength() + filler16.getLength() + caMiscSec.getLength() + caErrorSec.getLength() + caJobSec.getLength() + caHelpSec.getLength() + caSecuritySec.getLength() + caOnsiteSec.getLength() + caPagingSec.getLength() + caSwFlagSec.getLength() + caFillerSec.getLength());
    		caSection1.isAPartOf(baseString, true);
    		caSection2.isAPartOf(baseString, true);
    		caSection3.isAPartOf(baseString, true);
    		caSection4.isAPartOf(baseString, true);
    		caSection5.isAPartOf(baseString, true);
    		caSection6.isAPartOf(baseString, true);
    		caSection7.isAPartOf(baseString, true);
    		caSection8.isAPartOf(baseString, true);
    		caSection9.isAPartOf(baseString, true);
    		caCustAltPhone.isAPartOf(baseString, true);
    		caCustCrossStreets.isAPartOf(baseString, true);
    		caCustAptNo.isAPartOf(baseString, true);
    		caCustAddrRecType.isAPartOf(baseString, true);
    		caCustStreetWoutApt.isAPartOf(baseString, true);
    		caPrevCustKey.isAPartOf(baseString, true);
    		caRprLocUnNo.isAPartOf(baseString, true);
    		filler16.isAPartOf(baseString, true);
    		caMiscSec.isAPartOf(baseString, true);
    		caErrorSec.isAPartOf(baseString, true);
    		caJobSec.isAPartOf(baseString, true);
    		caHelpSec.isAPartOf(baseString, true);
    		caSecuritySec.isAPartOf(baseString, true);
    		caOnsiteSec.isAPartOf(baseString, true);
    		caPagingSec.isAPartOf(baseString, true);
    		caSwFlagSec.isAPartOf(baseString, true);
    		caFillerSec.isAPartOf(baseString, true);
   			baseString.resetIsAPartOfOffset();
  		}
  		return baseString;
	}


}